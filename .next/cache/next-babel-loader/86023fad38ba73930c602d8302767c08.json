{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { firestoreClient, firebaseClient } from \"components/firebase/firebaseClient\";\n\nfunction* activitySaga({\n  payload\n}) {\n  const user = firebaseClient.auth().currentUser;\n  addActivity(user, payload);\n}\n\nfunction addActivity(user, payload) {\n  firestoreClient.collection(\"activities\").add(_objectSpread(_objectSpread({}, payload), {}, {\n    date: new Date(),\n    leaderId: user.uid\n  })).catch(error => {\n    console.error(\"Error adding document in activitySaga: \", error);\n  });\n}\n\nexport default activitySaga;","map":{"version":3,"sources":["/home/raul-alzate/Documentos/project/pathway-learning/web/src/store/sagas/activitySaga.jsx"],"names":["firestoreClient","firebaseClient","activitySaga","payload","user","auth","currentUser","addActivity","collection","add","date","Date","leaderId","uid","catch","error","console"],"mappings":";;;;;;AAAA,SACEA,eADF,EAEEC,cAFF,QAGO,oCAHP;;AAKA,UAAUC,YAAV,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAoC;AAClC,QAAMC,IAAI,GAAGH,cAAc,CAACI,IAAf,GAAsBC,WAAnC;AACAC,EAAAA,WAAW,CAACH,IAAD,EAAOD,OAAP,CAAX;AACD;;AAED,SAASI,WAAT,CAAqBH,IAArB,EAA2BD,OAA3B,EAAoC;AAClCH,EAAAA,eAAe,CACZQ,UADH,CACc,YADd,EAEGC,GAFH,iCAGON,OAHP;AAIIO,IAAAA,IAAI,EAAE,IAAIC,IAAJ,EAJV;AAKIC,IAAAA,QAAQ,EAAER,IAAI,CAACS;AALnB,MAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACD,KAAR,CAAc,yCAAd,EAAyDA,KAAzD;AACD,GATH;AAUD;;AAED,eAAeb,YAAf","sourcesContent":["import {\n  firestoreClient,\n  firebaseClient,\n} from \"components/firebase/firebaseClient\";\n\nfunction* activitySaga({ payload }) {\n  const user = firebaseClient.auth().currentUser;\n  addActivity(user, payload);\n}\n\nfunction addActivity(user, payload) {\n  firestoreClient\n    .collection(\"activities\")\n    .add({\n      ...payload,\n      date: new Date(),\n      leaderId: user.uid,\n    })\n    .catch((error) => {\n      console.error(\"Error adding document in activitySaga: \", error);\n    });\n}\n\nexport default activitySaga;\n"]},"metadata":{},"sourceType":"module"}