{"ast":null,"code":"var _jsxFileName = \"/home/raul-alzate/Documentos/project/pathway-learning/web/src/pages/register.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Form, Label, Input, Button, Portlet, Spinner, Container, CustomInput, FloatLabel, Widget12 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { firebaseClient } from \"components/firebase/firebaseClient\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport * as yup from \"yup\";\nimport verifyCookie from \"components/firebase/firebaseVerifyCookie\";\nimport withLayout from \"components/layout/withLayout\";\nimport swalContent from \"sweetalert2-react-content\";\nimport Router from \"next/router\";\nimport Swal from \"@panely/sweetalert2\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport PAGE from \"config/page.config\"; // Use SweetAlert React Content library\n\nconst ReactSwal = swalContent(Swal); // Set SweetAlert options\n\nconst swal = ReactSwal.mixin({\n  customClass: {\n    confirmButton: \"btn btn-label-success btn-wide mx-1\",\n    cancelButton: \"btn btn-label-danger btn-wide mx-1\"\n  },\n  buttonsStyling: false\n});\n\nfunction RegisterPage() {\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Register | Panely\")), __jsx(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    noGutters: true,\n    className: \"align-items-center justify-content-center h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    sm: \"8\",\n    md: \"6\",\n    lg: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Portlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(Portlet.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center mt-2 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, __jsx(Widget12, {\n    display: true,\n    circle: true,\n    variant: \"label-primary\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: SolidIcon.faUserAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))), __jsx(RegisterForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nfunction RegisterForm() {\n  // Loading state\n  const [loading, setLoading] = React.useState(false); // Define Yup schema for form validation\n\n  const schema = yup.object().shape({\n    firstName: yup.string().min(5, \"Please enter at least 5 characters\").required(\"Please enter your lastname\"),\n    lastName: yup.string().min(5, \"Please enter at least 5 characters\").required(\"Please enter your lastname\"),\n    email: yup.string().email(\"Your email is not valid\").required(\"Please enter your email\"),\n    password: yup.string().min(6, \"Please enter at least 6 characters\").required(\"Please provide your password\"),\n    passwordRepeat: yup.string().min(6, \"Please enter at least 6 characters\").oneOf([yup.ref(\"password\")], \"Your password not match\").required(\"Please repeat your password\"),\n    agreement: yup.boolean().oneOf([true], \"You must accept the agreement\")\n  });\n  const {\n    control,\n    handleSubmit,\n    errors\n  } = useForm({\n    // Apply Yup as resolver for react-hook-form\n    resolver: yupResolver(schema),\n    // Define the default values for all input forms\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      passwordRepeat: \"\",\n      agreement: false\n    }\n  }); // Handle form submit event\n\n  const onSubmit = async ({\n    firstName,\n    lastName,\n    email,\n    password\n  }) => {\n    // Show loading indicator\n    setLoading(true); // Trying to register user account to firebase\n\n    await firebaseClient.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      // Trying to login with the user account that been registered before\n      return firebaseClient.auth().signInWithEmailAndPassword(email, password).then(() => {\n        const user = firebaseClient.auth().currentUser; // Trying to update user name\n\n        return user.updateProfile({\n          displayName: `${firstName} ${lastName}`\n        }).then(() => {\n          // Set the user login credential data\n          const credential = firebaseClient.auth.EmailAuthProvider.credential(user.email, password); // Trying to reauthenticate user account\n\n          return user.reauthenticateWithCredential(credential).then(() => {\n            // Redirect to dashboard page\n            Router.push(Router.query.redirect || PAGE.dashboardPagePath);\n          }).catch(err => {\n            // Show the error message if reauthentication is failed\n            swal.fire({\n              text: err.message,\n              icon: \"error\"\n            });\n          });\n        }).catch(err => {\n          // Show the error message if update user data is failed\n          swal.fire({\n            text: err.message,\n            icon: \"error\"\n          });\n        });\n      }).catch(err => {\n        // Show the error message if login is failed\n        swal.fire({\n          text: err.message,\n          icon: \"error\"\n        });\n      });\n    }).catch(err => {\n      // Show the error message if register is failed\n      swal.fire({\n        text: err.message,\n        icon: \"error\"\n      });\n    }); // Hide loading indicator\n\n    setLoading(false);\n  };\n\n  return __jsx(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    xs: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, __jsx(FloatLabel, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, __jsx(Controller, {\n    as: Input,\n    size: \"lg\",\n    type: \"text\",\n    id: \"first-name\",\n    name: \"firstName\",\n    control: control,\n    invalid: Boolean(errors.firstName),\n    placeholder: \"Insert your firstname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }), __jsx(Label, {\n    for: \"first-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"First name\"), errors.firstName && __jsx(Form.Feedback, {\n    children: errors.firstName.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 36\n    }\n  })))), __jsx(Col, {\n    xs: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, __jsx(FloatLabel, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, __jsx(Controller, {\n    as: Input,\n    size: \"lg\",\n    type: \"text\",\n    id: \"last-name\",\n    name: \"lastName\",\n    control: control,\n    invalid: Boolean(errors.lastName),\n    placeholder: \"Insert your lastname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }), __jsx(Label, {\n    for: \"last-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"last name\"), errors.lastName && __jsx(Form.Feedback, {\n    children: errors.lastName.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 35\n    }\n  }))))), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, __jsx(FloatLabel, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.email),\n    placeholder: \"Please insert your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }), __jsx(Label, {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"Email\"), errors.email && __jsx(Form.Feedback, {\n    children: errors.email.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 28\n    }\n  }))), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, __jsx(FloatLabel, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: Input,\n    size: \"lg\",\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    control: control,\n    invalid: Boolean(errors.password),\n    placeholder: \"Please provide your password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }), __jsx(Label, {\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, \"Password\"), errors.password && __jsx(Form.Feedback, {\n    children: errors.password.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 31\n    }\n  }))), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, __jsx(FloatLabel, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: Input,\n    size: \"lg\",\n    type: \"password\",\n    id: \"passwordRepeat\",\n    name: \"passwordRepeat\",\n    control: control,\n    invalid: Boolean(errors.passwordRepeat),\n    placeholder: \"Repeat your password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }), __jsx(Label, {\n    for: \"passwordRepeat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, \"Confirm password\"), errors.passwordRepeat && __jsx(Form.Feedback, {\n    children: errors.passwordRepeat.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 37\n    }\n  }))), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Group, {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    control: control,\n    name: \"agreement\",\n    render: ({\n      onChange,\n      onBlur,\n      value,\n      name,\n      ref\n    }) => __jsx(CustomInput, {\n      type: \"checkbox\",\n      size: \"lg\",\n      id: \"agreement\",\n      label: \"Accept agreement\",\n      invalid: Boolean(errors.agreement),\n      onBlur: onBlur,\n      onChange: e => onChange(e.target.checked),\n      checked: value,\n      innerRef: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, \"Already have an account ? \", __jsx(Link, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 37\n    }\n  }, \"Sign In\")), __jsx(Button, {\n    type: \"submit\",\n    variant: \"label-primary\",\n    size: \"lg\",\n    width: \"widest\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, loading ? __jsx(Spinner, {\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 22\n    }\n  }) : null, \" Register\")));\n}\n\nRegisterPage.getInitialProps = async ctx => {\n  const result = await verifyCookie(ctx); // Redirect to dashboard page if the user has logged in\n\n  if (result) {\n    if (ctx.res) {\n      ctx.res.writeHead(302, {\n        Location: ctx.query.redirect || PAGE.dashboardPagePath\n      });\n      ctx.res.end();\n    } else {\n      Router.push(Router.query.redirect || PAGE.dashboardPagePath);\n    }\n  }\n\n  return {\n    firebase: null\n  };\n};\n\nexport default withLayout(RegisterPage, \"blank\");","map":{"version":3,"sources":["/home/raul-alzate/Documentos/project/pathway-learning/web/src/pages/register.jsx"],"names":["Row","Col","Form","Label","Input","Button","Portlet","Spinner","Container","CustomInput","FloatLabel","Widget12","FontAwesomeIcon","useForm","Controller","firebaseClient","yupResolver","SolidIcon","yup","verifyCookie","withLayout","swalContent","Router","Swal","Link","Head","PAGE","ReactSwal","swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","RegisterPage","faUserAlt","RegisterForm","loading","setLoading","React","useState","schema","object","shape","firstName","string","min","required","lastName","email","password","passwordRepeat","oneOf","ref","agreement","boolean","control","handleSubmit","errors","resolver","defaultValues","onSubmit","auth","createUserWithEmailAndPassword","then","signInWithEmailAndPassword","user","currentUser","updateProfile","displayName","credential","EmailAuthProvider","reauthenticateWithCredential","push","query","redirect","dashboardPagePath","catch","err","fire","text","message","icon","Boolean","onChange","onBlur","value","name","e","target","checked","getInitialProps","ctx","result","res","writeHead","Location","end","firebase"],"mappings":"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","sourcesContent":["import {\n  Row,\n  Col,\n  Form,\n  Label,\n  Input,\n  Button,\n  Portlet,\n  Spinner,\n  Container,\n  CustomInput,\n  FloatLabel,\n  Widget12\n} from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { firebaseClient } from \"components/firebase/firebaseClient\"\nimport { yupResolver } from \"@hookform/resolvers\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport * as yup from \"yup\"\nimport verifyCookie from \"components/firebase/firebaseVerifyCookie\"\nimport withLayout from \"components/layout/withLayout\"\nimport swalContent from \"sweetalert2-react-content\"\nimport Router from \"next/router\"\nimport Swal from \"@panely/sweetalert2\"\nimport Link from \"next/link\"\nimport Head from \"next/head\"\nimport PAGE from \"config/page.config\"\n\n// Use SweetAlert React Content library\nconst ReactSwal = swalContent(Swal)\n\n// Set SweetAlert options\nconst swal = ReactSwal.mixin({\n  customClass: {\n    confirmButton: \"btn btn-label-success btn-wide mx-1\",\n    cancelButton: \"btn btn-label-danger btn-wide mx-1\"\n  },\n  buttonsStyling: false\n})\n\nfunction RegisterPage() {\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Register | Panely</title>\n      </Head>\n      <Container fluid>\n        <Row noGutters className=\"align-items-center justify-content-center h-100\">\n          <Col sm=\"8\" md=\"6\" lg=\"4\">\n            {/* BEGIN Portlet */}\n            <Portlet>\n              <Portlet.Body>\n                <div className=\"text-center mt-2 mb-4\">\n                  {/* BEGIN Widget */}\n                  <Widget12 display circle variant=\"label-primary\" className=\"mb-4\">\n                    <FontAwesomeIcon icon={SolidIcon.faUserAlt} />\n                  </Widget12>\n                  {/* END Widget */}\n                </div>\n                <RegisterForm />\n              </Portlet.Body>\n            </Portlet>\n            {/* END Portlet */}\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  )\n}\n\nfunction RegisterForm() {\n  // Loading state\n  const [loading, setLoading] = React.useState(false)\n\n  // Define Yup schema for form validation\n  const schema = yup.object().shape({\n    firstName: yup\n      .string()\n      .min(5, \"Please enter at least 5 characters\")\n      .required(\"Please enter your lastname\"),\n    lastName: yup\n      .string()\n      .min(5, \"Please enter at least 5 characters\")\n      .required(\"Please enter your lastname\"),\n    email: yup\n      .string()\n      .email(\"Your email is not valid\")\n      .required(\"Please enter your email\"),\n    password: yup\n      .string()\n      .min(6, \"Please enter at least 6 characters\")\n      .required(\"Please provide your password\"),\n    passwordRepeat: yup\n      .string()\n      .min(6, \"Please enter at least 6 characters\")\n      .oneOf([yup.ref(\"password\")], \"Your password not match\")\n      .required(\"Please repeat your password\"),\n    agreement: yup\n      .boolean()\n      .oneOf([true], \"You must accept the agreement\")\n  })\n\n  const { control, handleSubmit, errors } = useForm({\n    // Apply Yup as resolver for react-hook-form\n    resolver: yupResolver(schema),\n    // Define the default values for all input forms\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      passwordRepeat: \"\",\n      agreement: false,\n    }\n  })\n\n  // Handle form submit event\n  const onSubmit = async ({ firstName, lastName, email, password }) => {\n    // Show loading indicator\n    setLoading(true)\n\n    // Trying to register user account to firebase\n    await firebaseClient\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        // Trying to login with the user account that been registered before\n        return firebaseClient\n          .auth()\n          .signInWithEmailAndPassword(email, password)\n          .then(() => {\n            const user = firebaseClient.auth().currentUser\n\n            // Trying to update user name\n            return user.updateProfile({\n              displayName: `${firstName} ${lastName}`\n            }).then(() => {\n              // Set the user login credential data\n              const credential = firebaseClient.auth.EmailAuthProvider.credential(\n                user.email,\n                password\n              )\n\n              // Trying to reauthenticate user account\n              return user.reauthenticateWithCredential(credential).then(() => {\n                // Redirect to dashboard page\n                Router.push(Router.query.redirect || PAGE.dashboardPagePath)\n              }).catch(err => {\n                // Show the error message if reauthentication is failed\n                swal.fire({ text: err.message, icon: \"error\" })\n              })\n            }).catch(err => {\n              // Show the error message if update user data is failed\n              swal.fire({ text: err.message, icon: \"error\" })\n            })\n          })\n          .catch(err => {\n            // Show the error message if login is failed\n            swal.fire({ text: err.message, icon: \"error\" })\n          })\n      })\n      .catch(err => {\n        // Show the error message if register is failed\n        swal.fire({ text: err.message, icon: \"error\" })\n      })\n\n    // Hide loading indicator\n    setLoading(false)\n  }\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Row>\n        <Col xs=\"6\">\n          {/* BEGIN Form Group */}\n          <Form.Group>\n            <FloatLabel size=\"lg\">\n              <Controller\n                as={Input}\n                size=\"lg\"\n                type=\"text\"\n                id=\"first-name\"\n                name=\"firstName\"\n                control={control}\n                invalid={Boolean(errors.firstName)}\n                placeholder=\"Insert your firstname\"\n              />\n              <Label for=\"first-name\">First name</Label>\n              {errors.firstName && <Form.Feedback children={errors.firstName.message} />}\n            </FloatLabel>\n          </Form.Group>\n          {/* END Form Group */}\n        </Col>\n        <Col xs=\"6\">\n          {/* BEGIN Form Group */}\n          <Form.Group>\n            <FloatLabel size=\"lg\">\n              <Controller\n                as={Input}\n                size=\"lg\"\n                type=\"text\"\n                id=\"last-name\"\n                name=\"lastName\"\n                control={control}\n                invalid={Boolean(errors.lastName)}\n                placeholder=\"Insert your lastname\"\n              />\n              <Label for=\"last-name\">last name</Label>\n              {errors.lastName && <Form.Feedback children={errors.lastName.message} />}\n            </FloatLabel>\n          </Form.Group>\n          {/* END Form Group */}\n        </Col>\n      </Row>\n      {/* BEGIN Form Group */}\n      <Form.Group>\n        <FloatLabel size=\"lg\">\n          <Controller\n            as={Input}\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            size=\"lg\"\n            control={control}\n            invalid={Boolean(errors.email)}\n            placeholder=\"Please insert your email\"\n          />\n          <Label for=\"email\">Email</Label>\n          {errors.email && <Form.Feedback children={errors.email.message} />}\n        </FloatLabel>\n      </Form.Group>\n      {/* END Form Group */}\n      {/* BEGIN Form Group */}\n      <Form.Group>\n        <FloatLabel size=\"lg\">\n          <Controller\n            as={Input}\n            size=\"lg\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            control={control}\n            invalid={Boolean(errors.password)}\n            placeholder=\"Please provide your password\"\n          />\n          <Label for=\"password\">Password</Label>\n          {errors.password && <Form.Feedback children={errors.password.message} />}\n        </FloatLabel>\n      </Form.Group>\n      {/* END Form Group */}\n      {/* BEGIN Form Group */}\n      <Form.Group>\n        <FloatLabel size=\"lg\">\n          <Controller\n            as={Input}\n            size=\"lg\"\n            type=\"password\"\n            id=\"passwordRepeat\"\n            name=\"passwordRepeat\"\n            control={control}\n            invalid={Boolean(errors.passwordRepeat)}\n            placeholder=\"Repeat your password\"\n          />\n          <Label for=\"passwordRepeat\">Confirm password</Label>\n          {errors.passwordRepeat && <Form.Feedback children={errors.passwordRepeat.message} />}\n        </FloatLabel>\n      </Form.Group>\n      {/* END Form Group */}\n      <div className=\"d-flex align-items-center justify-content-between mb-3\">\n        {/* BEGIN Form Group */}\n        <Form.Group className=\"mb-0\">\n          <Controller\n            control={control}\n            name=\"agreement\"\n            render={({ onChange, onBlur, value, name, ref }) => (\n              <CustomInput\n                type=\"checkbox\"\n                size=\"lg\"\n                id=\"agreement\"\n                label=\"Accept agreement\"\n                invalid={Boolean(errors.agreement)}\n                onBlur={onBlur}\n                onChange={e => onChange(e.target.checked)}\n                checked={value}\n                innerRef={ref}\n              />\n            )}\n          />\n        </Form.Group>\n        {/* END Form Group */}\n      </div>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <span>\n          Already have an account ? <Link href=\"/login\">Sign In</Link>\n        </span>\n        <Button type=\"submit\" variant=\"label-primary\" size=\"lg\" width=\"widest\" disabled={loading}>\n          {loading ? <Spinner className=\"mr-2\" /> : null} Register\n        </Button>\n      </div>\n    </Form>\n  )\n}\n\nRegisterPage.getInitialProps = async ctx => {\n  const result = await verifyCookie(ctx)\n\n  // Redirect to dashboard page if the user has logged in\n  if (result) {\n    if (ctx.res) {\n      ctx.res.writeHead(302, { Location: ctx.query.redirect || PAGE.dashboardPagePath })\n      ctx.res.end()\n    } else {\n      Router.push(Router.query.redirect || PAGE.dashboardPagePath)\n    }\n  }\n\n  return { firebase: null }\n}\n\nexport default withLayout(RegisterPage, \"blank\")\n"]},"metadata":{},"sourceType":"module"}