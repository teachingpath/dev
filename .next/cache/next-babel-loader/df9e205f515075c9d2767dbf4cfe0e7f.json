{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Container, Row, Col, Portlet } from \"@panely/components\";\nimport { firestoreClient } from \"components/firebase/firebaseClient\";\nimport { pageChangeHeaderTitle, breadcrumbChange, activityChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\";\nimport withAuth from \"components/firebase/firebaseWithAuth\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport Swal from \"@panely/sweetalert2\";\nimport swalContent from \"sweetalert2-react-content\";\nimport Spinner from \"@panely/components/Spinner\";\nimport BadgetForm from \"./badget\";\nimport QuizForm from \"./questions\";\nvar ReactSwal = swalContent(Swal);\nvar toast = ReactSwal.mixin({\n  toast: true,\n  position: \"top-end\",\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  onOpen: function onOpen(toast) {\n    toast.addEventListener(\"mouseenter\", ReactSwal.stopTimer);\n    toast.addEventListener(\"mouseleave\", ReactSwal.resumeTimer);\n  }\n});\n\nvar FormBasePage = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormBasePage, _React$Component);\n\n  var _super = _createSuper(FormBasePage);\n\n  function FormBasePage(props) {\n    var _this;\n\n    _classCallCheck(this, FormBasePage);\n\n    _this = _super.call(this, props);\n\n    if (!Router.query.runnerId) {\n      Router.push(\"/pathway/create\");\n    } else {\n      _this.state = {\n        runnerId: Router.query.runnerId,\n        pathwayId: Router.query.pathwayId,\n        saved: false,\n        questions: []\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(FormBasePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Set header title\n      this.props.pageChangeHeaderTitle(\"Update Pathway\"); // Set breadcrumb data\n\n      this.props.breadcrumbChange([{\n        text: \"Pathway\",\n        link: \"/\"\n      }, {\n        text: \"Runner\",\n        link: \"/runner/create?pathwayId=\" + Router.query.pathwayId\n      }, {\n        text: \"Quiz\"\n      }]);\n      var runnersDb = firestoreClient.collection(\"runners\").doc(this.state.runnerId);\n      runnersDb.get().then(function (doc) {\n        if (doc.exists) {\n          runnersDb.collection(\"questions\").get().then(function (querySnapshot) {\n            var questions = [];\n            querySnapshot.forEach(function (doc) {\n              questions.push(_objectSpread({\n                id: doc.id\n              }, doc.data()));\n            });\n            return Promise.resolve(questions);\n          }).then(function (questions) {\n            _this2.setState(_objectSpread({\n              id: _this2.state.runnerId,\n              pathwayId: _this2.state.pathwayId,\n              saved: true,\n              questions: questions\n            }, doc.data()));\n          });\n        } else {\n          console.log(\"No such document!\");\n        }\n      })[\"catch\"](function (error) {\n        console.log(\"Error getting documents: \", error);\n        toast.fire({\n          icon: \"error\",\n          title: \"Getting a runner\"\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.saved) {\n        return __jsx(Spinner, null, \"Loading\");\n      }\n\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Runner | Quiz\")), __jsx(Container, {\n        fluid: true\n      }, __jsx(Row, null, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Runner | Quiz\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Add all the questions related to this runner, these questions should help validate the knowledge.\"), __jsx(\"hr\", null), __jsx(QuizForm, {\n        activityChange: this.props.activityChange,\n        saved: this.state.saved,\n        runnerId: this.state.runnerId,\n        pathwayId: this.state.pathwayId,\n        data: this.state.questions\n      })))), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Badget\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"This badge is awarded to the trainee if they successfully complete the Quiz.                  \"), __jsx(\"hr\", null), __jsx(BadgetForm, {\n        activityChange: this.props.activityChange,\n        saved: this.state.saved,\n        runnerId: this.state.runnerId,\n        pathwayId: this.state.pathwayId,\n        data: this.state\n      })))))));\n    }\n  }]);\n\n  return FormBasePage;\n}(React.Component);\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle: pageChangeHeaderTitle,\n    breadcrumbChange: breadcrumbChange,\n    activityChange: activityChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withAuth(withLayout(FormBasePage)));","map":null,"metadata":{},"sourceType":"module"}