{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Marker, Portlet, Timeline } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport { firestoreClient } from \"components/firebase/firebaseClient\";\n\nvar Widget13Component = /*#__PURE__*/function (_React$Component) {\n  _inherits(Widget13Component, _React$Component);\n\n  var _super = _createSuper(Widget13Component);\n\n  function Widget13Component(props) {\n    var _this;\n\n    _classCallCheck(this, Widget13Component);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(Widget13Component, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firestoreClient.collection(\"activities\").where(\"leaderId\", \"==\", this.props.firebase.user_id).orderBy(\"date\", \"desc\").limit(12).get().then(function (querySnapshot) {\n        var list = [];\n        querySnapshot.forEach(function (doc) {\n          var data = doc.data();\n          var time = new Date(data.date.seconds * 1000).toLocaleTimeString('es-ES', {\n            hour12: false\n          });\n          list.push({\n            time: time.substr(0, time.lastIndexOf(\":\")),\n            date: new Date(data.date.seconds * 1000),\n            color: data.color || \"info\",\n            content: function content() {\n              return __jsx(\"p\", {\n                className: \"mb-0\"\n              }, data.msn);\n            }\n          });\n        });\n\n        _this2.setState({\n          data: list\n        });\n      })[\"catch\"](function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Portlet, null, __jsx(Portlet.Header, null, __jsx(Portlet.Icon, null, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faClipboardList\n      })), __jsx(Portlet.Title, null, \"Recent activities\")), __jsx(Portlet.Body, null, __jsx(Timeline, {\n        timed: true\n      }, this.state.data.map(function (data, index) {\n        var time = data.time,\n            date = data.date,\n            color = data.color,\n            Content = data.content;\n        return __jsx(Timeline.Item, {\n          key: index,\n          date: date,\n          time: time,\n          pin: __jsx(Marker, {\n            type: \"circle\",\n            variant: color\n          })\n        }, __jsx(Content, null));\n      }))));\n    }\n  }]);\n\n  return Widget13Component;\n}(React.Component);\n\nexport default Widget13Component;","map":null,"metadata":{},"sourceType":"module"}