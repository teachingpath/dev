{"ast":null,"code":"var _jsxFileName = \"/home/raul-alzate/Documentos/project/pathway-learning/web/src/components/layout/part/HeaderUser.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Badge, Button, Avatar, GridNav, Portlet, Dropdown, RichList, Widget13 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { bindActionCreators } from \"redux\";\nimport { firebaseClient } from \"components/firebase/firebaseClient\";\nimport { firebaseChange } from \"store/actions\";\nimport { connect } from \"react-redux\";\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport swalContent from \"sweetalert2-react-content\";\nimport Router from \"next/router\";\nimport Swal from \"@panely/sweetalert2\";\nimport PAGE from \"config/page.config\"; // Use SweetAlert React Content library\n\nconst ReactSwal = swalContent(Swal); // Set SweetAlert options\n\nconst swal = ReactSwal.mixin({\n  customClass: {\n    confirmButton: \"btn btn-label-success btn-wide mx-1\",\n    cancelButton: \"btn btn-label-danger btn-wide mx-1\"\n  },\n  buttonsStyling: false\n});\n\nclass HeaderUser extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      avatar: () => __jsx(Avatar, {\n        variant: \"label-light\",\n        display: true,\n        circle: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faUserAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      })),\n      name: \"Guest\",\n      email: \"No email\",\n      count: '34K',\n      navs: [[{\n        icon: () => __jsx(FontAwesomeIcon, {\n          icon: RegularIcon.faAddressCard,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 23\n          }\n        }),\n        title: \"Profile\"\n      }, {\n        icon: () => __jsx(FontAwesomeIcon, {\n          icon: RegularIcon.faComments,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 23\n          }\n        }),\n        title: \"Messages\"\n      }, {\n        icon: () => __jsx(FontAwesomeIcon, {\n          icon: RegularIcon.faClone,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 23\n          }\n        }),\n        title: \"Activities\"\n      }]]\n    });\n\n    _defineProperty(this, \"handleSignOut\", () => {\n      // Try to signing out\n      firebaseClient.auth().signOut().then(() => {\n        // Redirect to login page and remove firebase data from state management\n        this.props.firebaseChange(null);\n        Router.push(PAGE.loginPagePath);\n      }).catch(err => {\n        // Show error message with SweetAlert\n        swal.fire({\n          text: err.message,\n          icon: \"error\"\n        });\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.firebase !== prevProps.firebase) {\n      // Check whether user has logged in\n      if (this.props.firebase) {\n        const {\n          name,\n          email\n        } = this.props.firebase; // Set the component state\n\n        this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n          name,\n          email\n        }));\n      }\n    }\n  }\n\n  render() {\n    const {\n      avatar: WidgetAvatar,\n      name,\n      email,\n      count,\n      navs\n    } = this.state;\n\n    const _this$props = this.props,\n          {\n      dispatch,\n      firebase,\n      firebaseChange\n    } = _this$props,\n          attributes = _objectWithoutProperties(_this$props, [\"dispatch\", \"firebase\", \"firebaseChange\"]);\n\n    return __jsx(Dropdown.Uncontrolled, _extends({}, attributes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }), __jsx(Widget13, {\n      dropdown: true,\n      variant: \"flat-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, __jsx(Widget13.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Hi \", __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 16\n      }\n    }, name)), __jsx(Widget13.Avatar, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUserAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }))), __jsx(Dropdown.Menu, {\n      wide: true,\n      right: true,\n      animated: true,\n      className: \"overflow-hidden py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, __jsx(Portlet, {\n      scroll: true,\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, __jsx(Portlet.Header, {\n      className: \"bg-primary rounded-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, __jsx(RichList.Item, {\n      className: \"w-100 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, __jsx(RichList.Addon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, __jsx(WidgetAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    })), __jsx(RichList.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, __jsx(RichList.Title, {\n      className: \"text-white\",\n      children: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }), __jsx(RichList.Subtitle, {\n      className: \"text-white\",\n      children: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    })), __jsx(RichList.Addon, {\n      addonType: \"append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, __jsx(Badge, {\n      variant: \"warning\",\n      shape: \"square\",\n      size: \"lg\",\n      children: count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    })))), __jsx(Portlet.Body, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, __jsx(GridNav, {\n      flush: true,\n      action: true,\n      noRounded: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, navs.map((nav, index) => __jsx(GridNav.Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, nav.map((data, index) => {\n      const {\n        icon: Icon,\n        title\n      } = data;\n      return __jsx(GridNav.Item, {\n        key: index,\n        icon: __jsx(Icon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 62\n          }\n        }),\n        children: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 30\n        }\n      });\n    }))))), __jsx(Portlet.Footer, {\n      bordered: true,\n      className: \"rounded-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      variant: \"label-danger\",\n      onClick: this.handleSignOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Sign out\")))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    firebase: state.firebase\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    firebaseChange\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderUser);","map":{"version":3,"sources":["/home/raul-alzate/Documentos/project/pathway-learning/web/src/components/layout/part/HeaderUser.jsx"],"names":["Badge","Button","Avatar","GridNav","Portlet","Dropdown","RichList","Widget13","FontAwesomeIcon","bindActionCreators","firebaseClient","firebaseChange","connect","RegularIcon","SolidIcon","swalContent","Router","Swal","PAGE","ReactSwal","swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","HeaderUser","React","Component","avatar","faUserAlt","name","email","count","navs","icon","faAddressCard","title","faComments","faClone","auth","signOut","then","props","push","loginPagePath","catch","err","fire","text","message","componentDidUpdate","prevProps","firebase","setState","state","render","WidgetAvatar","dispatch","attributes","map","nav","index","data","Icon","handleSignOut","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import {\n  Badge,\n  Button,\n  Avatar,\n  GridNav,\n  Portlet,\n  Dropdown,\n  RichList,\n  Widget13\n} from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { bindActionCreators } from \"redux\"\nimport { firebaseClient } from \"components/firebase/firebaseClient\"\nimport { firebaseChange } from \"store/actions\"\nimport { connect } from \"react-redux\"\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport swalContent from \"sweetalert2-react-content\"\nimport Router from \"next/router\"\nimport Swal from \"@panely/sweetalert2\"\nimport PAGE from \"config/page.config\"\n\n// Use SweetAlert React Content library\nconst ReactSwal = swalContent(Swal)\n\n// Set SweetAlert options\nconst swal = ReactSwal.mixin({\n  customClass: {\n    confirmButton: \"btn btn-label-success btn-wide mx-1\",\n    cancelButton: \"btn btn-label-danger btn-wide mx-1\"\n  },\n  buttonsStyling: false\n})\n\nclass HeaderUser extends React.Component {\n  state = {\n    avatar: () => (\n      <Avatar variant=\"label-light\" display circle>\n        <FontAwesomeIcon icon={SolidIcon.faUserAlt} />\n      </Avatar>\n    ),\n    name: \"Guest\",\n    email: \"No email\",\n    count: '34K',\n    navs: [\n      [\n        {\n          icon: () => <FontAwesomeIcon icon={RegularIcon.faAddressCard} />,\n          title: \"Profile\"\n        },\n        {\n          icon: () => <FontAwesomeIcon icon={RegularIcon.faComments} />,\n          title: \"Messages\"\n        },\n        {\n          icon: () => <FontAwesomeIcon icon={RegularIcon.faClone} />,\n          title: \"Activities\"\n        }\n      ]\n    ]\n  }\n\n  handleSignOut = () => {\n    // Try to signing out\n    firebaseClient.auth().signOut().then(() => {\n      // Redirect to login page and remove firebase data from state management\n      this.props.firebaseChange(null)\n      Router.push(PAGE.loginPagePath)\n    }).catch(err => {\n      // Show error message with SweetAlert\n      swal.fire({ text: err.message, icon: \"error\" })\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.firebase !== prevProps.firebase) {\n      // Check whether user has logged in\n      if (this.props.firebase) {\n        const { name, email } = this.props.firebase\n\n        // Set the component state\n        this.setState({\n          ...this.state, name, email\n        })\n      }\n    }\n  }\n\n  render() {\n    const { avatar: WidgetAvatar,   name, email, count, navs } = this.state\n    const { dispatch, firebase, firebaseChange, ...attributes } = this.props\n\n    return (\n      <Dropdown.Uncontrolled {...attributes}>\n        <Widget13 dropdown variant=\"flat-primary\">\n          <Widget13.Text>\n            Hi <strong>{name}</strong>\n          </Widget13.Text>\n          {/* BEGIN Avatar */}\n          <Widget13.Avatar variant=\"info\">\n            <FontAwesomeIcon icon={SolidIcon.faUserAlt} />\n          </Widget13.Avatar>\n          {/* END Avatar */}\n        </Widget13>\n        <Dropdown.Menu wide right animated className=\"overflow-hidden py-0\">\n          {/* BEGIN Portlet */}\n          <Portlet scroll className=\"border-0\">\n            <Portlet.Header className=\"bg-primary rounded-0\">\n              {/* BEGIN Rich List */}\n              <RichList.Item className=\"w-100 p-0\">\n                <RichList.Addon addonType=\"prepend\">\n                  <WidgetAvatar />\n                </RichList.Addon>\n                <RichList.Content>\n                  <RichList.Title className=\"text-white\" children={name} />\n                  <RichList.Subtitle className=\"text-white\" children={email} />\n                </RichList.Content>\n                <RichList.Addon addonType=\"append\">\n                  <Badge variant=\"warning\" shape=\"square\" size=\"lg\" children={count} />\n                </RichList.Addon>\n              </RichList.Item>\n              {/* END Rich List */}\n            </Portlet.Header>\n            <Portlet.Body className=\"p-0\">\n              {/* BEGIN Grid Nav */}\n              <GridNav flush action noRounded>\n                {navs.map((nav, index) => (\n                  <GridNav.Row key={index}>\n                    {nav.map((data, index) => {\n                      const { icon: Icon, title } = data\n\n                      return <GridNav.Item key={index} icon={<Icon />} children={title} />\n                    })}\n                  </GridNav.Row>\n                ))}\n              </GridNav>\n              {/* END Grid Nav */}\n            </Portlet.Body>\n            <Portlet.Footer bordered className=\"rounded-0\">\n              <Button variant=\"label-danger\" onClick={this.handleSignOut}>Sign out</Button>\n            </Portlet.Footer>\n          </Portlet>\n          {/* END Portlet */}\n        </Dropdown.Menu>\n      </Dropdown.Uncontrolled>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    firebase: state.firebase\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ firebaseChange }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderUser)\n"]},"metadata":{},"sourceType":"module"}