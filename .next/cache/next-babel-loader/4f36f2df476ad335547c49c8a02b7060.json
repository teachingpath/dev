{"ast":null,"code":"var _jsxFileName = \"/home/raul-alzate/Documentos/project/pathway-learning/web/src/components/widgets/Widget14.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Badge, Portlet, Dropdown, RichList, Button } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Router from \"next/router\";\nimport { firestoreClient } from \"components/firebase/firebaseClient\";\n\nclass Widget14Component extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    firestoreClient.collection(\"pathways\").where(\"leaderId\", \"==\", this.props.firebase.user_id).get().then(querySnapshot => {\n      const list = [];\n      querySnapshot.forEach(doc => {\n        list.push(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      });\n      this.setState({\n        data: list\n      });\n    }).catch(error => {\n      console.log(\"Error getting documents: \", error);\n    });\n  }\n\n  onDelete(pathwayId) {\n    firestoreClient.collection(\"pathways\").doc(pathwayId).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n      this.componentDidMount();\n      this.props.activityChange({\n        type: \"edit_pathway\",\n        pathwayId: pathwayId,\n        type: \"delete_pathway\"\n      });\n    }).catch(error => {\n      console.error(\"Error removing document: \", error);\n    });\n  }\n\n  render() {\n    return __jsx(Portlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, __jsx(Portlet.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, __jsx(Portlet.Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faRoute,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    })), __jsx(Portlet.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Pathways\"), __jsx(Portlet.Addon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      onClick: () => {\n        Router.push(\"/pathway/create\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"New\")), __jsx(Portlet.Addon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, __jsx(Dropdown.Uncontrolled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, __jsx(Dropdown.Toggle, {\n      caret: true,\n      variant: \"label-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Status\"), __jsx(Dropdown.Menu, {\n      right: true,\n      animated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, __jsx(Dropdown.Item, {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, __jsx(Badge, {\n      variant: \"label-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, \"Published\")), __jsx(Dropdown.Item, {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, __jsx(Badge, {\n      variant: \"label-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, \"In draft\")))))), __jsx(Portlet.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, __jsx(RichList, {\n      bordered: true,\n      action: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, this.state.data.map((data, index) => {\n      const {\n        name,\n        description,\n        id\n      } = data;\n      return __jsx(RichList.Item, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, __jsx(RichList.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }, __jsx(RichList.Title, {\n        children: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }), __jsx(RichList.Subtitle, {\n        children: description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      })), __jsx(RichList.Addon, {\n        addonType: \"append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }\n      }, __jsx(Dropdown.Uncontrolled, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, __jsx(Dropdown.Toggle, {\n        icon: true,\n        variant: \"text-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faEllipsisH,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      })), __jsx(Dropdown.Menu, {\n        right: true,\n        animated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 23\n        }\n      }, __jsx(Dropdown.Item, {\n        href: \"javascript:void(0)\",\n        onClick: () => {\n          Router.push({\n            pathname: \"/pathway/edit\",\n            query: {\n              pathwayId: id\n            }\n          });\n        },\n        icon: __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faEdit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, \"Editar\"), __jsx(Dropdown.Item, {\n        href: \"javascript:void(0)\",\n        onClick: () => {\n          this.onDelete(id);\n        },\n        icon: __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faTrashAlt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, \"Delete\"), __jsx(Dropdown.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      }), __jsx(Dropdown.Item, {\n        href: \"javascript:void(0)\",\n        onClick: () => {\n          Router.push({\n            pathname: \"/runner/create\",\n            query: {\n              pathwayId: id\n            }\n          });\n        },\n        icon: __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faRunning,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, \"Add runner\")))));\n    }))));\n  }\n\n}\n\nexport default Widget14Component;","map":{"version":3,"sources":["/home/raul-alzate/Documentos/project/pathway-learning/web/src/components/widgets/Widget14.jsx"],"names":["Badge","Portlet","Dropdown","RichList","Button","FontAwesomeIcon","SolidIcon","Router","firestoreClient","Widget14Component","React","Component","constructor","props","state","data","componentDidMount","collection","where","firebase","user_id","get","then","querySnapshot","list","forEach","doc","push","id","setState","catch","error","console","log","onDelete","pathwayId","delete","activityChange","type","render","faRoute","map","index","name","description","faEllipsisH","pathname","query","faEdit","faTrashAlt","faRunning"],"mappings":"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","sourcesContent":["import { Badge, Portlet, Dropdown, RichList, Button } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Router from \"next/router\";\nimport { firestoreClient } from \"components/firebase/firebaseClient\";\n\nclass Widget14Component extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { data: [] };\n  }\n\n  componentDidMount() {\n    firestoreClient\n      .collection(\"pathways\")\n      .where(\"leaderId\", \"==\", this.props.firebase.user_id)\n      .get()\n      .then((querySnapshot) => {\n        const list = [];\n        querySnapshot.forEach((doc) => {\n          list.push({\n            id: doc.id,\n            ...doc.data(),\n          });\n        });\n        this.setState({ data: list });\n      })\n      .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n      });\n  }\n\n  onDelete(pathwayId) {\n    firestoreClient\n      .collection(\"pathways\")\n      .doc(pathwayId)\n      .delete()\n      .then(() => {\n        console.log(\"Document successfully deleted!\");\n        this.componentDidMount();\n        this.props.activityChange({\n          type: \"edit_pathway\",\n          pathwayId: pathwayId,\n          type: \"delete_pathway\"\n        });\n\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n  }\n\n  render() {\n    return (\n      <Portlet>\n        <Portlet.Header>\n          <Portlet.Icon>\n            <FontAwesomeIcon icon={SolidIcon.faRoute} />\n          </Portlet.Icon>\n          <Portlet.Title>Pathways</Portlet.Title>\n          <Portlet.Addon>\n            <Button\n              onClick={() => {\n                Router.push(\"/pathway/create\");\n              }}\n            >\n              New\n            </Button>\n          </Portlet.Addon>\n          <Portlet.Addon>\n            {/* BEGIN Dropdown */}\n            <Dropdown.Uncontrolled>\n              <Dropdown.Toggle caret variant=\"label-primary\">\n                Status\n              </Dropdown.Toggle>\n              <Dropdown.Menu right animated>\n                <Dropdown.Item href=\"#\">\n                  <Badge variant=\"label-success\">Published</Badge>\n                </Dropdown.Item>\n                <Dropdown.Item href=\"#\">\n                  <Badge variant=\"label-info\">In draft</Badge>\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown.Uncontrolled>\n            {/* END Dropdown */}\n          </Portlet.Addon>\n        </Portlet.Header>\n        <Portlet.Body>\n          {/* BEGIN Rich List */}\n          <RichList bordered action>\n            {this.state.data.map((data, index) => {\n              const { name, description, id } = data;\n\n              return (\n                <RichList.Item key={index}>\n                  <RichList.Content>\n                    <RichList.Title children={name} />\n                    <RichList.Subtitle children={description} />\n                  </RichList.Content>\n                  <RichList.Addon addonType=\"append\">\n                    {/* BEGIN Dropdown */}\n                    <Dropdown.Uncontrolled>\n                      <Dropdown.Toggle icon variant=\"text-secondary\">\n                        <FontAwesomeIcon icon={SolidIcon.faEllipsisH} />\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu right animated>\n                        <Dropdown.Item\n                           href=\"javascript:void(0)\"\n                           onClick={() => {\n                             Router.push({\n                               pathname: \"/pathway/edit\",\n                               query: { pathwayId: id },\n                             });\n                           }}\n                          icon={<FontAwesomeIcon icon={SolidIcon.faEdit} />}\n                        >\n                          Editar\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          href=\"javascript:void(0)\"\n                          onClick={() => {\n                            this.onDelete(id);\n                          }}\n                          icon={<FontAwesomeIcon icon={SolidIcon.faTrashAlt} />}\n                        >\n                          Delete\n                        </Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item\n                          href=\"javascript:void(0)\"\n                          onClick={() => {\n                            Router.push({\n                              pathname: \"/runner/create\",\n                              query: { pathwayId: id },\n                            });\n                          }}\n                          icon={<FontAwesomeIcon icon={SolidIcon.faRunning} />}\n                        >\n                          Add runner\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown.Uncontrolled>\n                    {/* END Dropdown */}\n                  </RichList.Addon>\n                </RichList.Item>\n              );\n            })}\n          </RichList>\n          {/* END Rich List */}\n        </Portlet.Body>\n      </Portlet>\n    );\n  }\n}\n\nexport default Widget14Component;\n"]},"metadata":{},"sourceType":"module"}