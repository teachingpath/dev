{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Row, Col, Container } from \"@panely/components\";\nimport { pageChangeHeaderTitle, breadcrumbChange, activityChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\";\nimport withAuth from \"components/firebase/firebaseWithAuth\";\nimport Carusel from \"components/widgets/Widget36\";\nimport Activities from \"components/widgets/Widget13\";\nimport Pathways from \"components/widgets/Widget14\";\nimport Widget27 from \"components/widgets/Widget27\";\nimport Widget33 from \"components/widgets/Widget33\";\nimport Head from \"next/head\";\n\nvar DashboardPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(DashboardPage, _React$Component);\n\n  var _super = _createSuper(DashboardPage);\n\n  function DashboardPage() {\n    _classCallCheck(this, DashboardPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DashboardPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Set header title\n      this.props.pageChangeHeaderTitle(\"Pathway\"); // Set breadcrumb data\n\n      this.props.breadcrumbChange([{\n        text: \"Pathway\",\n        link: \"/\"\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Pathway | Teaching Path\")), __jsx(Container, {\n        fluid: true\n      }, __jsx(Row, null, __jsx(Col, {\n        xs: \"12\"\n      }, __jsx(Widget33, null))), __jsx(Row, null), __jsx(Row, {\n        portletFill: \"xl\"\n      }, __jsx(Col, {\n        xl: \"8\"\n      }, __jsx(Row, {\n        portletFill: \"md\"\n      }, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Pathways, this.props), __jsx(Activities, this.props)), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Carusel, this.props)))))));\n    }\n  }]);\n\n  return DashboardPage;\n}(React.Component);\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle: pageChangeHeaderTitle,\n    breadcrumbChange: breadcrumbChange,\n    activityChange: activityChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withAuth(withLayout(DashboardPage)));","map":null,"metadata":{},"sourceType":"module"}