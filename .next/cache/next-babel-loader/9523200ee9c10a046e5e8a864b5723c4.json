{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Container, Row, Col, Button, Portlet } from \"@panely/components\";\nimport { firestoreClient, firebaseClient } from \"components/firebase/firebaseClient\";\nimport { pageChangeHeaderTitle, breadcrumbChange, activityChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\";\nimport withAuth from \"components/firebase/firebaseWithAuth\";\nimport Head from \"next/head\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Router from \"next/router\";\nimport uuid from \"components/helpers/uuid\";\nimport Swal from \"@panely/sweetalert2\";\nimport swalContent from \"sweetalert2-react-content\";\nimport TrophyForm from \"./trophy\";\nimport PathwayForm from \"./pathway\";\nvar ReactSwal = swalContent(Swal);\nvar toast = ReactSwal.mixin({\n  toast: true,\n  position: \"top-end\",\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  onOpen: function onOpen(toast) {\n    toast.addEventListener(\"mouseenter\", ReactSwal.stopTimer);\n    toast.addEventListener(\"mouseleave\", ReactSwal.resumeTimer);\n  }\n});\n\nvar FormBasePage = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormBasePage, _React$Component);\n\n  var _super = _createSuper(FormBasePage);\n\n  function FormBasePage(props) {\n    var _this;\n\n    _classCallCheck(this, FormBasePage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      id: uuid(),\n      saved: false\n    };\n    _this.onCreate = _this.onCreate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FormBasePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.pageChangeHeaderTitle(\"Create Pathway\");\n      this.props.breadcrumbChange([{\n        text: \"Pathway\",\n        link: \"/\"\n      }, {\n        text: \"Create\"\n      }]);\n    }\n  }, {\n    key: \"onCreate\",\n    value: function onCreate(data) {\n      var _this2 = this;\n\n      var user = firebaseClient.auth().currentUser;\n      firestoreClient.collection(\"pathways\").doc(this.state.id).set(_objectSpread(_objectSpread({}, data), {}, {\n        draft: true,\n        leaderId: user.uid,\n        date: new Date()\n      })).then(function () {\n        _this2.setState(_objectSpread({\n          id: _this2.state.id,\n          saved: true\n        }, data));\n\n        toast.fire({\n          icon: \"success\",\n          title: \"Pathway saved successfully\"\n        });\n\n        _this2.props.activityChange(_objectSpread({\n          pathwayId: _this2.state.id,\n          type: \"new_pathway\",\n          msn: \"The \\\"\" + data.name + \"\\\" pathway was created.\"\n        }, data));\n      })[\"catch\"](function (error) {\n        console.error(\"Error adding document: \", error);\n        toast.fire({\n          icon: \"error\",\n          title: \"Creation pathway\"\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Pathway | Create\")), __jsx(Container, {\n        fluid: true\n      }, __jsx(Row, null, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Pathway | Create\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"After creating the Pathway you must create the runners to add the tracks.\"), __jsx(\"hr\", null), __jsx(PathwayForm, {\n        onSave: this.onCreate,\n        pathwayId: this.state.id\n      })), __jsx(Portlet.Footer, null, __jsx(Button, {\n        type: \"button\",\n        disabled: !this.state.saved,\n        className: \"float-right\",\n        onClick: function onClick() {\n          Router.push({\n            pathname: \"/runner/create\",\n            query: {\n              pathwayId: _this3.state.id\n            }\n          });\n        }\n      }, \"Add Runner\", __jsx(FontAwesomeIcon, {\n        className: \"ml-2\",\n        icon: SolidIcon.faPlus\n      }))))), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Trophy\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"This is the trophy that goes to the end of the pathway.\"), __jsx(\"hr\", null), __jsx(TrophyForm, {\n        activityChange: this.props.activityChange,\n        pathwayId: this.state.id,\n        saved: this.state.saved\n      })))))));\n    }\n  }]);\n\n  return FormBasePage;\n}(React.Component);\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle: pageChangeHeaderTitle,\n    breadcrumbChange: breadcrumbChange,\n    activityChange: activityChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withAuth(withLayout(FormBasePage)));","map":null,"metadata":{},"sourceType":"module"}