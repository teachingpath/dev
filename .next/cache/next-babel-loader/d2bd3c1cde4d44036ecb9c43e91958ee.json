{"ast":null,"code":"var _jsxFileName = \"/home/raul-alzate/Documentos/project/pathway-learning/web/src/pages/pathway/edit.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Container, Row, Col, Button, Portlet } from \"@panely/components\";\nimport { firestoreClient, firebaseClient } from \"components/firebase/firebaseClient\";\nimport { pageChangeHeaderTitle, breadcrumbChange, activityChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\";\nimport withAuth from \"components/firebase/firebaseWithAuth\";\nimport Head from \"next/head\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Router from \"next/router\";\nimport Swal from \"@panely/sweetalert2\";\nimport swalContent from \"sweetalert2-react-content\";\nimport RunnerList from \"../runner/runnerList\";\nimport TrophyForm from \"./trophy\";\nimport PathwayForm from \"./pathway\";\nimport Spinner from \"@panely/components/Spinner\";\nconst ReactSwal = swalContent(Swal);\nconst toast = ReactSwal.mixin({\n  toast: true,\n  position: \"top-end\",\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  onOpen: toast => {\n    toast.addEventListener(\"mouseenter\", ReactSwal.stopTimer);\n    toast.addEventListener(\"mouseleave\", ReactSwal.resumeTimer);\n  }\n});\n\nclass FormBasePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (!Router.query.pathwayId) {\n      Router.push(\"/pathway/create\");\n    } else {\n      this.state = {\n        id: Router.query.pathwayId,\n        saved: false\n      };\n      this.onEdit = this.onEdit.bind(this);\n    }\n  }\n\n  componentDidMount() {\n    // Set header title\n    this.props.pageChangeHeaderTitle(\"Update Pathway\"); // Set breadcrumb data\n\n    this.props.breadcrumbChange([{\n      text: \"Pathway\",\n      link: \"/\"\n    }, {\n      text: \"Update\"\n    }]);\n    firestoreClient.collection(\"pathways\").doc(this.state.id).get().then(doc => {\n      if (doc.exists) {\n        this.setState(_objectSpread({\n          id: this.state.id,\n          saved: true\n        }, doc.data()));\n      } else {\n        console.log(\"No such document!\");\n      }\n    }).catch(error => {\n      console.log(\"Error getting documents: \", error);\n      toast.fire({\n        icon: \"error\",\n        title: \"Getting a pathway\"\n      });\n    });\n  }\n\n  onEdit(data) {\n    firestoreClient.collection(\"pathways\").doc(this.state.id).update(_objectSpread({}, data)).then(docRef => {\n      this.setState(_objectSpread({\n        id: this.state.id,\n        saved: true\n      }, data));\n      toast.fire({\n        icon: \"success\",\n        title: \"Pathway updated successfully\"\n      });\n      this.props.activityChange(_objectSpread({\n        pathwayId: this.state.id,\n        type: \"edit_pathway\",\n        msn: \"The \\\"\" + data.name + \"\\\" pathway was changed.\"\n      }, data));\n    }).catch(error => {\n      console.error(\"Error adding document: \", error);\n      toast.fire({\n        icon: \"error\",\n        title: \"Creation pathway\"\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.saved) {\n      return __jsx(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 14\n        }\n      }, \"Loading\");\n    }\n\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"Pathway | Edit\")), __jsx(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, __jsx(Portlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, __jsx(Portlet.Header, {\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, __jsx(Portlet.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, \"Pathway | Edit\")), __jsx(Portlet.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, __jsx(PathwayForm, {\n      onSave: this.onEdit,\n      pathwayId: this.state.id,\n      saved: this.state.saved,\n      data: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    })))), __jsx(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, __jsx(Portlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, __jsx(Portlet.Header, {\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, __jsx(Portlet.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, \"Trophy\")), __jsx(Portlet.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, __jsx(TrophyForm, {\n      activityChange: this.props.activityChange,\n      pathwayId: this.state.id,\n      data: this.state.trophy,\n      saved: this.state.saved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    })))), __jsx(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, __jsx(Portlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, __jsx(Portlet.Header, {\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, __jsx(Portlet.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, \"Runners\")), __jsx(Portlet.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, __jsx(RunnerList, {\n      pathwayId: this.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    })), __jsx(Portlet.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      type: \"button\",\n      disabled: !this.state.saved,\n      onClick: () => {\n        Router.push({\n          pathname: \"/runner/create\",\n          query: {\n            pathwayId: this.state.id\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }, \"Add Runner\", __jsx(FontAwesomeIcon, {\n      className: \"ml-2\",\n      icon: SolidIcon.faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }))))))));\n  }\n\n}\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle,\n    breadcrumbChange,\n    activityChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withAuth(withLayout(FormBasePage)));","map":{"version":3,"sources":["/home/raul-alzate/Documentos/project/pathway-learning/web/src/pages/pathway/edit.jsx"],"names":["Container","Row","Col","Button","Portlet","firestoreClient","firebaseClient","pageChangeHeaderTitle","breadcrumbChange","activityChange","bindActionCreators","connect","withLayout","withAuth","Head","FontAwesomeIcon","SolidIcon","Router","Swal","swalContent","RunnerList","TrophyForm","PathwayForm","Spinner","ReactSwal","toast","mixin","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","FormBasePage","React","Component","constructor","props","query","pathwayId","push","state","id","saved","onEdit","bind","componentDidMount","text","link","collection","doc","get","then","exists","setState","data","console","log","catch","error","fire","icon","title","update","docRef","type","msn","name","render","trophy","pathname","faPlus","mapDispathToProps","dispatch"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,EAAsCC,OAAtC,QAAqD,oBAArD;AACA,SACEC,eADF,EAEEC,cAFF,QAGO,oCAHP;AAIA,SACEC,qBADF,EAEEC,gBAFF,EAGEC,cAHF,QAIO,eAJP;AAKA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAO,KAAKC,SAAZ,MAA2B,mCAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AAEA,MAAMC,SAAS,GAAGL,WAAW,CAACD,IAAD,CAA7B;AACA,MAAMO,KAAK,GAAGD,SAAS,CAACE,KAAV,CAAgB;AAC5BD,EAAAA,KAAK,EAAE,IADqB;AAE5BE,EAAAA,QAAQ,EAAE,SAFkB;AAG5BC,EAAAA,iBAAiB,EAAE,KAHS;AAI5BC,EAAAA,KAAK,EAAE,IAJqB;AAK5BC,EAAAA,gBAAgB,EAAE,IALU;AAM5BC,EAAAA,MAAM,EAAGN,KAAD,IAAW;AACjBA,IAAAA,KAAK,CAACO,gBAAN,CAAuB,YAAvB,EAAqCR,SAAS,CAACS,SAA/C;AACAR,IAAAA,KAAK,CAACO,gBAAN,CAAuB,YAAvB,EAAqCR,SAAS,CAACU,WAA/C;AACD;AAT2B,CAAhB,CAAd;;AAYA,MAAMC,YAAN,SAA2BC,KAAK,CAACC,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AACA,QAAI,CAACtB,MAAM,CAACuB,KAAP,CAAaC,SAAlB,EAA6B;AAC3BxB,MAAAA,MAAM,CAACyB,IAAP,CAAY,iBAAZ;AACD,KAFD,MAEO;AACL,WAAKC,KAAL,GAAa;AACXC,QAAAA,EAAE,EAAE3B,MAAM,CAACuB,KAAP,CAAaC,SADN;AAEXI,QAAAA,KAAK,EAAE;AAFI,OAAb;AAKA,WAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACD;AACF;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKT,KAAL,CAAWhC,qBAAX,CAAiC,gBAAjC,EAFkB,CAGlB;;AACA,SAAKgC,KAAL,CAAW/B,gBAAX,CAA4B,CAC1B;AAAEyC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAD0B,EAE1B;AAAED,MAAAA,IAAI,EAAE;AAAR,KAF0B,CAA5B;AAKA5C,IAAAA,eAAe,CACZ8C,UADH,CACc,UADd,EAEGC,GAFH,CAEO,KAAKT,KAAL,CAAWC,EAFlB,EAGGS,GAHH,GAIGC,IAJH,CAISF,GAAD,IAAS;AACb,UAAIA,GAAG,CAACG,MAAR,EAAgB;AACd,aAAKC,QAAL;AACEZ,UAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EADjB;AAEEC,UAAAA,KAAK,EAAE;AAFT,WAGKO,GAAG,CAACK,IAAJ,EAHL;AAKD,OAND,MAMO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,KAdH,EAeGC,KAfH,CAeUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCE,KAAzC;AACApC,MAAAA,KAAK,CAACqC,IAAN,CAAW;AACTC,QAAAA,IAAI,EAAE,OADG;AAETC,QAAAA,KAAK,EAAE;AAFE,OAAX;AAID,KArBH;AAsBD;;AAEDlB,EAAAA,MAAM,CAACW,IAAD,EAAO;AACXpD,IAAAA,eAAe,CACZ8C,UADH,CACc,UADd,EAEGC,GAFH,CAEO,KAAKT,KAAL,CAAWC,EAFlB,EAGGqB,MAHH,mBAIOR,IAJP,GAMGH,IANH,CAMSY,MAAD,IAAY;AAChB,WAAKV,QAAL;AACEZ,QAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EADjB;AAEEC,QAAAA,KAAK,EAAE;AAFT,SAGKY,IAHL;AAKAhC,MAAAA,KAAK,CAACqC,IAAN,CAAW;AACTC,QAAAA,IAAI,EAAE,SADG;AAETC,QAAAA,KAAK,EAAE;AAFE,OAAX;AAIA,WAAKzB,KAAL,CAAW9B,cAAX;AACEgC,QAAAA,SAAS,EAAE,KAAKE,KAAL,CAAWC,EADxB;AAEEuB,QAAAA,IAAI,EAAE,cAFR;AAGEC,QAAAA,GAAG,EAAE,WAASX,IAAI,CAACY,IAAd,GAAmB;AAH1B,SAIKZ,IAJL;AAMD,KAtBH,EAuBGG,KAvBH,CAuBUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACApC,MAAAA,KAAK,CAACqC,IAAN,CAAW;AACTC,QAAAA,IAAI,EAAE,OADG;AAETC,QAAAA,KAAK,EAAE;AAFE,OAAX;AAID,KA7BH;AA8BD;;AAEDM,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAK3B,KAAL,CAAWE,KAAhB,EAAuB;AACrB,aAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AAED,WACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE,MAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD,CAAS,MAAT;AAAgB,MAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AACE,MAAA,MAAM,EAAE,KAAKC,MADf;AAEE,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,EAFxB;AAGE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAHpB;AAIE,MAAA,IAAI,EAAE,KAAKF,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAFF,CADF,EAkBE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD,CAAS,MAAT;AAAgB,MAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,cAAc,EAAE,KAAKJ,KAAL,CAAW9B,cAD7B;AAEE,MAAA,SAAS,EAAE,KAAKkC,KAAL,CAAWC,EAFxB;AAGE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAW4B,MAHnB;AAIE,MAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWE,KAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAFF,CAlBF,EAmCE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD,CAAS,MAAT;AAAgB,MAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAOE,MAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWE,KAFxB;AAGE,MAAA,OAAO,EAAE,MAAM;AACb5B,QAAAA,MAAM,CAACyB,IAAP,CAAY;AACV8B,UAAAA,QAAQ,EAAE,gBADA;AAEVhC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE,KAAKE,KAAL,CAAWC;AAAxB;AAFG,SAAZ;AAID,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAWE,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAE5B,SAAS,CAACyD,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF,CAPF,CAFF,CAnCF,CADF,CAJF,CADF;AAuED;;AA7JwC;;AAgK3C,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,SAAOjE,kBAAkB,CACvB;AAAEH,IAAAA,qBAAF;AAAyBC,IAAAA,gBAAzB;AAA2CC,IAAAA;AAA3C,GADuB,EAEvBkE,QAFuB,CAAzB;AAID;;AAED,eAAehE,OAAO,CACpB,IADoB,EAEpB+D,iBAFoB,CAAP,CAGb7D,QAAQ,CAACD,UAAU,CAACuB,YAAD,CAAX,CAHK,CAAf","sourcesContent":["import { Container, Row, Col, Button, Portlet } from \"@panely/components\";\nimport {\n  firestoreClient,\n  firebaseClient,\n} from \"components/firebase/firebaseClient\";\nimport {\n  pageChangeHeaderTitle,\n  breadcrumbChange,\n  activityChange,\n} from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\";\nimport withAuth from \"components/firebase/firebaseWithAuth\";\nimport Head from \"next/head\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Router from \"next/router\";\nimport Swal from \"@panely/sweetalert2\";\nimport swalContent from \"sweetalert2-react-content\";\nimport RunnerList from \"../runner/runnerList\";\nimport TrophyForm from \"./trophy\";\nimport PathwayForm from \"./pathway\";\nimport Spinner from \"@panely/components/Spinner\";\n\nconst ReactSwal = swalContent(Swal);\nconst toast = ReactSwal.mixin({\n  toast: true,\n  position: \"top-end\",\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  onOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", ReactSwal.stopTimer);\n    toast.addEventListener(\"mouseleave\", ReactSwal.resumeTimer);\n  },\n});\n\nclass FormBasePage extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!Router.query.pathwayId) {\n      Router.push(\"/pathway/create\");\n    } else {\n      this.state = {\n        id: Router.query.pathwayId,\n        saved: false,\n      };\n\n      this.onEdit = this.onEdit.bind(this);\n    }\n  }\n\n  componentDidMount() {\n    // Set header title\n    this.props.pageChangeHeaderTitle(\"Update Pathway\");\n    // Set breadcrumb data\n    this.props.breadcrumbChange([\n      { text: \"Pathway\", link: \"/\" },\n      { text: \"Update\" },\n    ]);\n\n    firestoreClient\n      .collection(\"pathways\")\n      .doc(this.state.id)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          this.setState({\n            id: this.state.id,\n            saved: true,\n            ...doc.data(),\n          });\n        } else {\n          console.log(\"No such document!\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n        toast.fire({\n          icon: \"error\",\n          title: \"Getting a pathway\",\n        });\n      });\n  }\n\n  onEdit(data) {\n    firestoreClient\n      .collection(\"pathways\")\n      .doc(this.state.id)\n      .update({\n        ...data\n      })\n      .then((docRef) => {\n        this.setState({\n          id: this.state.id,\n          saved: true,\n          ...data,\n        });\n        toast.fire({\n          icon: \"success\",\n          title: \"Pathway updated successfully\",\n        });\n        this.props.activityChange({\n          pathwayId: this.state.id,\n          type: \"edit_pathway\",\n          msn: \"The \\\"\"+data.name+\"\\\" pathway was changed.\",\n          ...data\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n        toast.fire({\n          icon: \"error\",\n          title: \"Creation pathway\",\n        });\n      });\n  }\n\n  render() {\n    if (!this.state.saved) {\n      return <Spinner>Loading</Spinner>;\n    }\n\n    return (\n      <React.Fragment>\n        <Head>\n          <title>Pathway | Edit</title>\n        </Head>\n        <Container fluid>\n          <Row>\n            <Col md=\"6\">\n              {/* BEGIN Portlet */}\n              <Portlet>\n                <Portlet.Header bordered>\n                  <Portlet.Title>Pathway | Edit</Portlet.Title>\n                </Portlet.Header>\n                <Portlet.Body>\n                  <PathwayForm\n                    onSave={this.onEdit}\n                    pathwayId={this.state.id}\n                    saved={this.state.saved}\n                    data={this.state}\n                  />\n                </Portlet.Body>\n              </Portlet>\n              {/* END Portlet */}\n            </Col>\n            <Col md=\"6\">\n              {/* BEGIN Portlet */}\n              <Portlet>\n                <Portlet.Header bordered>\n                  <Portlet.Title>Trophy</Portlet.Title>\n                </Portlet.Header>\n                <Portlet.Body>\n                  <TrophyForm\n                    activityChange={this.props.activityChange}\n                    pathwayId={this.state.id}\n                    data={this.state.trophy}\n                    saved={this.state.saved}\n                  />\n                </Portlet.Body>\n              </Portlet>\n              {/* END Portlet */}\n            </Col>\n            <Col md=\"12\">\n              {/* BEGIN Portlet */}\n              <Portlet>\n                <Portlet.Header bordered>\n                  <Portlet.Title>Runners</Portlet.Title>\n                </Portlet.Header>\n                <Portlet.Body>\n                  <RunnerList pathwayId={this.state.id} />\n                </Portlet.Body>\n                <Portlet.Footer>\n                  <Button\n                    type=\"button\"\n                    disabled={!this.state.saved}\n                    onClick={() => {\n                      Router.push({\n                        pathname: \"/runner/create\",\n                        query: { pathwayId: this.state.id },\n                      });\n                    }}\n                  >\n                    Add Runner\n                    <FontAwesomeIcon className=\"ml-2\" icon={SolidIcon.faPlus} />\n                  </Button>\n                </Portlet.Footer>\n              </Portlet>\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators(\n    { pageChangeHeaderTitle, breadcrumbChange, activityChange },\n    dispatch\n  );\n}\n\nexport default connect(\n  null,\n  mapDispathToProps\n)(withAuth(withLayout(FormBasePage)));\n"]},"metadata":{},"sourceType":"module"}